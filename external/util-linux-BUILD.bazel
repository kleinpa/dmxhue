load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

cc_library(
    name = "utillinux",
    strip_include_prefix = "include",
    hdrs = [
        "include/all-io.h",
        "include/bitops.h",
        "include/blkdev.h",
        "include/buffer.h",
        "include/c.h",
        "include/canonicalize.h",
        #"include/caputils.h",
        "include/carefulputc.h",
        "include/cctype.h",
        "include/closestream.h",
        "include/color-names.h",
        "include/colors.h",
        "include/cpuset.h",
        "include/crc32.h",
        "include/crc32c.h",
        "include/debug.h",
        "include/debugobj.h",
        "include/encode.h",
        "include/env.h",
        "include/exec_shell.h",
        "include/exitcodes.h",
        "include/fileutils.h",
        "include/fuzz.h",
        "include/idcache.h",
        "include/ismounted.h",
        "include/iso9660.h",
        #"include/jsonwrt.h",
        "include/linux_version.h",
        "include/list.h",
        "include/loopdev.h",
        "include/mangle.h",
        "include/match.h",
        "include/mbsalign.h",
        "include/mbsedit.h",
        "include/md5.h",
        "include/minix.h",
        "include/monotonic.h",
        "include/namespace.h",
        "include/nls.h",
        "include/optutils.h",
        "include/pager.h",
        "include/partx.h",
        "include/path.h",
        "include/pathnames.h",
        "include/pidfd-utils.h",
        "include/plymouth-ctrl.h",
        #"include/procutils.h",
        "include/pt-bsd.h",
        "include/pt-gpt-partnames.h",
        "include/pt-mbr-partnames.h",
        "include/pt-mbr.h",
        "include/pt-sgi.h",
        "include/pt-sun.h",
        "include/pty-session.h",
        "include/pwdutils.h",
        "include/randutils.h",
        "include/rpmatch.h",
        #"include/selinux-utils.h",
        "include/sha1.h",
        "include/signames.h",
        "include/statfs_magic.h",
        "include/strutils.h",
        "include/strv.h",
        #"include/swapheader.h",
        #"include/swapprober.h",
        "include/sysfs.h",
        "include/timer.h",
        "include/timeutils.h",
        "include/ttyutils.h",
        "include/widechar.h",
        "include/xalloc.h",
    ],
    srcs = [
        "lib/blkdev.c",
        "lib/buffer.c",
        "lib/canonicalize.c",
        #"lib/caputils.c",
        "lib/color-names.c",
        "lib/colors.c",
        "lib/cpuset.c",
        "lib/crc32.c",
        "lib/crc32c.c",
        "lib/encode.c",
        "lib/env.c",
        "lib/exec_shell.c",
        "lib/fileutils.c",
        "lib/idcache.c",
        "lib/ismounted.c",
        #"lib/jsonwrt.c",
        "lib/langinfo.c",
        "lib/linux_version.c",
        "lib/loopdev.c",
        "lib/mangle.c",
        "lib/match.c",
        "lib/mbsalign.c",
        "lib/mbsedit.c",
        "lib/md5.c",
        "lib/monotonic.c",
        "lib/pager.c",
        "lib/path.c",
        "lib/plymouth-ctrl.c",
        #"lib/procutils.c",
        "lib/pty-session.c",
        "lib/pwdutils.c",
        "lib/randutils.c",
        #"lib/selinux-utils.c",
        "lib/sha1.c",
        "lib/signames.c",
        "lib/strutils.c",
        "lib/strv.c",
        #"lib/swapprober.c",
        "lib/sysfs.c",
        "lib/timer.c",
        "lib/timeutils.c",
        "lib/ttyutils.c",
    ],
    copts = [
        "-DHAVE_SYS_FILE_H",
        "-DHAVE_UNISTD_H",
        "-DHAVE_ERR_H",
        "-D_GNU_SOURCE",
        "-DHAVE_SYS_TIME_H",
        "-DHAVE_GETDTABLESIZE",
        "-DHAVE_SYS_SYSMACROS_H",
    ],
    linkopts = ["-lutil"],
    defines = ["HAVE_USLEEP"],
)

cc_library(
    name = "uuid",
    visibility = ["//visibility:public"],
    hdrs = glob(["libuuid/src/uuid.h"]),
    srcs = [
        "libuuid/src/clear.c",
        "libuuid/src/compare.c",
        "libuuid/src/copy.c",
        "libuuid/src/gen_uuid.c",
        "libuuid/src/isnull.c",
        "libuuid/src/pack.c",
        "libuuid/src/parse.c",
        "libuuid/src/predefined.c",
        "libuuid/src/unpack.c",
        "libuuid/src/unparse.c",
        "libuuid/src/uuid.h",
        "libuuid/src/uuidP.h",
        "libuuid/src/uuid_time.c",
        "libuuid/src/uuidd.h",
    ],
    strip_include_prefix = "libuuid/src",
    include_prefix = "uuid",
    copts = [
        "-DHAVE_SYS_FILE_H",
        "-DHAVE_USLEEP",
    ],
    deps = [":utillinux"],
)
cc_test(
    name = "uuid_test",
    srcs = ["libuuid/src/test_uuid.c"],
    deps = [":uuid"],
)
